# This workflow will build a MuleSoft project and deploy to CloudHub

name: Build and Deploy to Sandbox

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PLATFORM_USERNAME: ${{ secrets.PLATFORM_USERNAME }}
      PLATFORM_PASSWORD: ${{ secrets.PLATFORM_PASSWORD }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    
    steps:
    
    - name: Checkout repository
      uses: actions/checkout@v2
    
    - name: Cache Depenedencies
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven
    
    - name: Build with maven
      run: mvn -B clean package -s .maven/settings.xml
    
    - name: Stamp artifact file name with commit hash
      run: |
        artifactName1=$(ls target/*.jar | head -1)
        commitHash=$(git rev-parse --short "$GITHUB_SHA")
        artifactName2=$(ls target/*.jar | head -1 | sed "s/.jar/-$commitHash.jar/g")
        mv $artifactName1 $artifactName2
    
    - name: Upload artifact 
      uses: actions/upload-artifact@master
      with:
          name: artifacts
          path: target/*.jar
    
    - name: Slack Notification
      uses: act10ns/slack@v1
      with: 
        status: ${{ job.status }}
        channel: '#meetups'
        message: Build {{ env.GITHUB_REF_NAME }} branch Successfully
      if: always()  
      
  deploy:
    needs: build
    runs-on: ubuntu-latest
    env:
      PLATFORM_USERNAME: ${{ secrets.PLATFORM_USERNAME }}
      PLATFORM_PASSWORD: ${{ secrets.PLATFORM_PASSWORD }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

    steps:    
    
    - name: Checkout repository
      uses: actions/checkout@v2
    
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    
    - uses: actions/download-artifact@master
      with:
        name: artifacts
    
    - name: Deploy to Sandbox
      run: mvn deploy -DmuleDeploy -DskipTests  --file pom.xml -s .maven/settings.xml
         
    - name: Notify Slack
      uses: act10ns/slack@v1.2.2
      with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: '#meetups'
          message: Deployed {{ env.GITHUB_REF_NAME }} branch Successfully
      if: always()